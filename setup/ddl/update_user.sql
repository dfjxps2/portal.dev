DROP PROCEDURE IF EXISTS UPDATE_PORTAL_USER;
CREATE PROCEDURE UPDATE_PORTAL_USER (
  IN P_USER_ID INT
	, IN P_USER_NAME VARCHAR(40)
	, IN P_USER_REAL_NAME	VARCHAR(40)
	, IN P_USER_STATE	INT
	, IN P_JOB_ID	INT
	, IN P_USER_ADDR	VARCHAR(80)
	, IN P_USER_TEL	VARCHAR(20)
	, IN P_USER_GLOBAL_ID	INT
	, IN P_ROLE_IDS	VARCHAR(200)
	, IN P_DEP_ID	INT
  , OUT P_ERROR_NO INT
)
BEGIN
	DECLARE IDX INT;
	DECLARE ROLE_ID VARCHAR(16);

	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET P_ERROR_NO=0;
	SET P_ERROR_NO = 1;

	START TRANSACTION;

  DELETE FROM USER_DEP_RELA WHERE USER_ID = P_USER_ID;
  DELETE FROM USER_ROLE_RELA WHERE USER_ID = P_USER_ID;

	UPDATE SYS_USER SET
    		  USER_NAME = P_USER_NAME,
    		  USER_REAL_NAME = P_USER_REAL_NAME,
    		  USER_STATE = P_USER_STATE,
    		  JOB_ID = P_JOB_ID,
    		  USER_ADDR = P_USER_ADDR,
    		  USER_TEL = P_USER_TEL,
    		  UPD_TIME = NOW()
  WHERE USER_ID = P_USER_ID;

  SET IDX = LOCATE(',', P_ROLE_IDS);
	IF IDX = 0 AND LENGTH(P_ROLE_IDS) > 0 THEN
		SET IDX = LENGTH(P_ROLE_IDS)+1;
	END IF;

  WHILE IDX > 0
  DO
    SET ROLE_ID = LEFT(P_ROLE_IDS,IDX-1);

    INSERT INTO USER_ROLE_RELA (
        USER_ID
        ,ROLE_ID
        ,CRE_TIME
        ,UPD_TIME
      ) VALUES (P_USER_ID, CAST(ROLE_ID AS SIGNED), NOW(), NOW());

    SET P_ROLE_IDS = SUBSTR(P_ROLE_IDS FROM IDX+1);
    SET IDX = LOCATE(',', P_ROLE_IDS);

  	IF IDX = 0 AND LENGTH(P_ROLE_IDS) > 0 THEN
  		SET IDX = LENGTH(P_ROLE_IDS)+1;
  	END IF;

  END WHILE;

	INSERT INTO USER_DEP_RELA (
			USER_ID, DEP_ID
		) VALUES (P_USER_ID, P_DEP_ID);

	IF P_ERROR_NO = 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;

END;
