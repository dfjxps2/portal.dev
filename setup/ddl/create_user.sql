DROP PROCEDURE IF EXISTS CREATE_PORTAL_USER;
DELIMITER //
CREATE PROCEDURE CREATE_PORTAL_USER (
	IN USER_NAME VARCHAR(40)
	, IN USER_PASSWORD	VARCHAR(40)
	, IN USER_REAL_NAME	VARCHAR(40)
	, IN USER_STATE	INT
	, IN JOB_ID	INT
	, IN USER_ADDR	VARCHAR(80)
	, IN USER_TEL	VARCHAR(20)
	, IN USER_GLOBAL_ID	INT
	, IN USER_EMAIL	VARCHAR(60)
	, IN ROLE_IDS	VARCHAR(200)
	, IN DEP_ID	INT
  , OUT ERROR_NO INT)
BEGIN
	DECLARE NEW_USER_ID INT;
	DECLARE IDX INT;
	DECLARE ROLE_ID VARCHAR(16);

	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET ERROR_NO=0;
	SET ERROR_NO = 1;

	START TRANSACTION;

	INSERT INTO SYS_USER (
    		  USER_NAME,
    		  USER_PASSWORD,
    		  USER_REAL_NAME,
    		  USER_STATE,
    		  JOB_ID,
    		  USER_ADDR,
    		  USER_TEL,
    		  USER_EMAIL,
    		  CRE_TIME,
    		  UPD_TIME
	) VALUES (
			USER_NAME
			,USER_PASSWORD
			,USER_REAL_NAME
			,USER_STATE
			,JOB_ID
			,USER_ADDR
			,USER_TEL
			,USER_EMAIL
			,NOW()
			,NOW()
	);

	SET NEW_USER_ID =LAST_INSERT_ID();

  SET IDX = LOCATE(',', ROLE_IDS);
	IF IDX = 0 AND LENGTH(ROLE_IDS) > 0 THEN
		SET IDX = LENGTH(ROLE_IDS)+1;
	END IF;

  WHILE IDX > 0
  DO
    SET ROLE_ID = LEFT(ROLE_IDS,IDX-1);

    INSERT INTO USER_ROLE_RELA (
        USER_ID
        ,ROLE_ID
        ,CRE_TIME
        ,UPD_TIME
      ) VALUES (NEW_USER_ID, CAST(ROLE_ID AS SIGNED), NOW(), NOW());

    SET ROLE_IDS = SUBSTR(ROLE_IDS FROM IDX+1);
    SET IDX = LOCATE(',', ROLE_IDS);

  	IF IDX = 0 AND LENGTH(ROLE_IDS) > 0 THEN
  		SET IDX = LENGTH(ROLE_IDS)+1;
  	END IF;

  END WHILE;

	INSERT INTO USER_DEP_RELA (
			USER_ID, DEP_ID
		) VALUES (NEW_USER_ID, DEP_ID);

	IF ERROR_NO = 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;

END//
