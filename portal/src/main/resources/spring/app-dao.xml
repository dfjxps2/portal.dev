<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd" default-lazy-init="true"
>
    <!--<context:property-placeholder location="/WEB-INF/config/properties/*.properties"/>-->




    <bean id="configTool" class="com.quick.core.util.config.ConfigTool">
        <property name="locations">
            <list>
                <value>classpath:/properties/jdbc.properties</value>
                <value>classpath:/properties/config.properties</value>
                <value>classpath:/properties/responsecode.properties</value>
            </list>
        </property>
    </bean>

    <!-- MyBatis整合 Start -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations" value="classpath*:com/quick/**/*Mapper.xml" />
        <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
        <property name="dataSource" ref="dataSource" />
        <property name="plugins">
            <array>
                <bean class="com.quick.core.base.mybatis.SqlInterceptor" />
            </array>
        </property>
    </bean>
    
    <!-- 查找类路径下的映射器并自动将它们创建成MapperFactoryBean-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.quick" />   
	<property name="markerInterface" value="com.quick.core.base.ISysBaseDao"/>
       <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
       <!-- <property name="annotationClass" value="org.springframework.stereotype.Repository" />-->
    </bean>
    <!-- MyBatis整合 End -->
    
    <!--配置事务 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" /> 
    </bean>
    <!-- enable transaction demarcation with annotations 
    <tx:annotation-driven />-->
	<!-- enable transaction annotation support -->
	<tx:annotation-driven transaction-manager="transactionManager" />
    
    <!--
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource">  
            <ref bean="dataSource" />  
        </property>  
    </bean>
    -->
    <!-- Activates scanning of @Repository, @Service, @Controller and @Component -->

   <!--<import resource="application-service.xml"/>-->
    
</beans>