<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quick.portal.sysUser.ISysUserDao">

	<!--查询条件-->
	<sql id="where">
		1=1
		<if test="user_id != null and user_id != '' and !'null'.equals(user_id)"><![CDATA[
	       and user_id = #{user_id}
	    ]]></if>
		<if test="user_password != null and user_password != '' and !'null'.equals(user_password)"><![CDATA[
	       and user_password = #{user_password}
	    ]]></if>
		<if test="user_state != null and user_state != '' and !'null'.equals(user_state)"><![CDATA[
	       and user_state = #{user_state}
	    ]]></if>
		<if test="user_real_name != null and user_real_name != '' and !'null'.equals(user_real_name)"><![CDATA[
	     and user_real_name = #{user_real_name}
       ]]></if>
		<if test="job_id != null and job_id != '' and !'null'.equals(job_id)"><![CDATA[
	       and job_id = #{job_id}
	    ]]></if>
		<if test="dep_id != null and dep_id != '' and !'null'.equals(dep_id)"><![CDATA[
	       and dep_id = #{dep_id}
	    ]]></if>
		<if test="user_name != null and user_name != '' and !'null'.equals(user_name)"><![CDATA[
	       and user_name = #{user_name}
	    ]]></if>
		<if test="cre_time != null and cre_time != '' and !'null'.equals(cre_time)"><![CDATA[
	       and cre_time >= #{cre_time}
	    ]]></if>
		<if test="upd_time != null and upd_time != '' and !'null'.equals(upd_time)"><![CDATA[
	       and upd_time >= #{upd_time}
	    ]]></if>
		<if test="_sql_where != null and _sql_where != ''"> <![CDATA[
            and ${_sql_where}
        ]]> </if>
	</sql>

	<!-- 新增sys_user -->
	<insert id="insert" parameterType="com.quick.portal.sysUser.SysUserDO" statementType="CALLABLE">
		{CALL CREATE_PORTAL_USER(
			#{user_name, mode=IN},
			#{user_password, mode=IN},
			#{user_real_name, mode=IN},
			#{user_state, mode=IN},
			#{job_id, mode=IN},
			#{user_addr, mode=IN},
			#{user_tel, mode=IN},
			#{user_global_id, mode=IN},
			#{roleList[0].role_id, mode=IN},
			#{depList[0].dep_id, mode=IN},
			#{error_no, jdbcType=INTEGER, mode=OUT}
		)}
	</insert>

	<!--删除用户的角色-->
	<delete id="deleteUserRole" parameterType="String">
		delete from user_role_rela where user_id = #{user_id}
	</delete>

	<!--更新用户角色-->
	<insert id="addRoleUsers" parameterType="java.util.List">
		INSERT INTO  user_role_rela (user_id,role_id,cre_time,upd_time)
		VALUES
		<foreach collection="list" item="entity" separator=",">
			(
			#{entity.user_id},
			#{entity.role_id},
			#{entity.cre_time},
			#{entity.upd_time}
			)
		</foreach>
	</insert>

	<insert id="insertUserDepRela" parameterType="com.quick.portal.sysUser.SysUserDO">
		INSERT INTO user_dep_rela(
		   user_id,
		    dep_id
		)VALUES(
		#{user_id},
		#{dep_id}
		)
	</insert>

	<!-- 修改sys_user -->
	<update id="update" parameterType="com.quick.portal.sysUser.SysUserDO">
		update sys_user 
		   set
		      user_name = #{user_name},
		      user_real_name = #{user_real_name},
		      user_addr = #{user_addr},
		      user_state=#{user_state},
			  user_tel=#{user_tel},
			  job_id=#{job_id},
			  upd_time=#{upd_time}
		 where user_id = #{user_id}
	</update>

	<update id="updateUserDepRela" parameterType="com.quick.portal.sysUser.SysUserDO">
		UPDATE  user_dep_rela
		      SET
		      dep_id = #{dep_id},
		      user_id = #{user_id}
		  WHERE  rela_id = #{rela_id}
	</update>

	<update id="updatePassword" parameterType="com.quick.portal.sysUser.SysUserDO">
		update sys_user
		set
		user_password=#{user_password}
		where user_id = #{user_id}
	</update>
	
	
	<update id="modifyPwdByApp" parameterType="com.quick.portal.sysUser.SysUserDO">
		update sys_user  set
		user_password=#{user_password},
		user_state=1
		where user_name = #{user_name}
	</update>


	<!-- 删除 -->
	<delete id="delete" parameterType="com.quick.portal.sysUser.SysUserDO" statementType="CALLABLE">
		{
			CALL DELETE_PORTAL_USER(#{user_id, mode=IN}, #{error_no, jdbcType=INTEGER, mode=OUT})
		}
	</delete>

	<delete id="deleteUserDepRela" parameterType="String">
		delete from user_dep_rela WHERE  rela_id = #{rela_id}
	</delete>


	<select id="select" parameterType="map" resultType="map">
		select u.user_id
		, u.user_name
		, u.user_real_name
		, u.user_state
		, u.job_id
		, u.user_addr
		, u.user_tel
		, u.user_global_id
		, u.cre_time
		, u.upd_time
		,group_concat(r.role_name) as role_name
		,group_concat(d.dep_name) as dep_name
		,j.job_name, j.job_level
		from sys_user u
		join user_role_rela ur_rel on u.user_id = ur_rel.user_id
		join user_role r on r.role_id = ur_rel.role_id
		join user_dep_rela ud_rel on u.user_id = ud_rel.user_id
		join user_department d on d.dep_id = ud_rel.dep_id
		join user_job j on u.job_id = j.job_id
		<where>
		<include refid="where" />
		</where>
		group by u.user_id
		, u.user_name
		, u.user_real_name
		, u.user_state
		, u.job_id
		, u.user_addr
		, u.user_tel
		, u.user_global_id
		, u.cre_time
		, u.upd_time
		, j.job_name
		, j.job_level
		<if test="_sql_order != null and _sql_order != ''">
		order by ${_sql_order}
     	</if>
	</select>

	<select id="getUserEdit" parameterType="map" resultType="map">
		select urd.*,uj.job_name from (select udrn.*, udn.dep_name from(select urn.*,udr.dep_id,udr.rela_id from (select su.*,rn.role_name role_name,rn.rel_id rel_id,rn.role_type_id role_type_id,rn.role_id role_id from sys_user su
		left join(select urr.user_id, GROUP_CONCAT(role_name) role_name ,ur.role_type_id,urr.rel_id,GROUP_CONCAT(ur.role_id) role_id from  user_role ur  INNER JOIN user_role_rela urr on ur.role_id = urr.role_id GROUP BY urr.user_id) rn on su.user_id = rn.user_id where su.user_id= #{user_id}) urn
		left join user_dep_rela udr on urn.user_id = udr.user_id where 1=1) udrn left join user_department udn
		on udrn.dep_id = udn.dep_id  where 1=1)urd left join user_job uj on urd.job_id=uj.job_id
	</select>

	<!--用户新增查询生产用户id-->
	<select id="selectUserId" resultType="java.lang.String" >
		select su.user_id from sys_user  su
		WHERE 1=1
		ORDER BY  su.user_id  DESC
		LIMIT 0,1
	</select>

   <!--新增用户的角色下拉框选项-->
	<select id="selectRole" parameterType="map" resultType="map">
		SELECT   ur.role_id,ur.role_name  FROM  user_role ur
		WHERE  ur.role_state = 1
	</select>

	<!--用户管理部门的下拉框选项-->
	<select id="selectDep" parameterType="map" resultType="map">
		SELECT  ud.dep_id,ud.dep_name FROM  user_department ud
		WHERE  ud.dep_state = 1
	</select>

	<!--用户编辑角色-->
	<select id="getUserRoleRe" parameterType="java.lang.String" resultType="com.quick.portal.userRoleRela.UserRoleRelaDO" >
		SELECT urr.rel_id,urr.user_id,urr.role_id,urr.cre_time,urr.upd_time  FROM  user_role_rela urr WHERE  user_id = #{user_id} AND  role_id = #{role_oid}
	</select>


	<!--用户名称验证-->
	<select id="selectByName" parameterType="java.lang.String" resultType="map">
		SELECT su.* FROM  sys_user su WHERE  su.user_name = #{user_name}
	</select>
	
	
	<update id="updateUserStatueByUersId" parameterType="java.lang.String">
		update sys_user  set user_state=0, upd_time =now()  where user_name = #{user_name}
	</update>
	
	
		<!--查询当前IP,密码错误次数-->
	<select id="getLockCount" parameterType="java.lang.String" resultType="map">
	<![CDATA[		        			
		   SELECT
			AUD_USER,
			COUNT(AUD_DATE) AS CNT
			FROM COM_AUDIT_TRAIL
			WHERE  AUD_ACTION = 'AUTHENTICATION_FAILED'
			AND AUD_CLIENT_IP = #{ip}
			AND AUD_DATE > date_sub(now(), INTERVAL 5 MINUTE)
			AND AUD_USER IN (
				SELECT  AUD_USER
				FROM  COM_AUDIT_TRAIL
				WHERE  AUD_ACTION = 'AUTHENTICATION_FAILED'
				AND AUD_CLIENT_IP = #{ip}
				AND	AUD_DATE IN (
						SELECT
							MAX(AUD_DATE)
						FROM COM_AUDIT_TRAIL
						WHERE AUD_ACTION = 'AUTHENTICATION_FAILED'
						AND AUD_CLIENT_IP = #{ip}
						AND AUD_DATE > date_sub(now(), INTERVAL 1 MINUTE)
						)
		   )			
		]]>
	</select>
	<!--  通过用户名称查询用户信息 -->
	<select id="isExitUserInfoByUserId" parameterType="java.lang.String" resultType="map">
	<![CDATA[		        		
			SELECT USER_STATE, COUNT(1) AS CNT FROM SYS_USER WHERE USER_NAME=#{userName}
		]]>
	</select>

	<select id="getUserInfo" parameterType="map" resultMap="userInfoMap">
        select u.*,
            r.role_id, r.role_name, r.role_type_id, r.role_state
            ,d.dep_id, d.super_dep_id, d.dep_name, d.dep_level, d.dep_state, d.dep_global_id, d.sup_dep_global_id
          ,j.job_name, j.job_level
        from sys_user u
            ,user_role_rela ur_rel
            ,user_role r
            ,user_dep_rela ud_rel
            ,user_department d
            ,user_job j
        where
            u.user_id = ur_rel.user_id
        and r.role_id = ur_rel.role_id
        and u.user_id = ud_rel.user_id
        and d.dep_id = ud_rel.dep_id
        and u.job_id = j.job_id
        <if test="user_id != null and user_id != ''"><![CDATA[
	       and u.user_id = #{user_id}
	    ]]></if>
        <if test="user_name != null and user_name != ''"><![CDATA[
	       and u.user_name = #{user_name}
	    ]]></if>
    </select>


	<resultMap id="userInfoMap" type="com.quick.portal.sysUser.SysUserDO">
		<id property="user_id" column="user_id"/>
		<result property="user_name" column="user_name"/>
		<result property="user_real_name" column="user_real_name"/>
		<result property="user_state" column="user_state"/>
		<result property="job_id" column="job_id"/>
		<result property="user_addr" column="user_addr"/>
		<result property="user_tel" column="user_tel"/>
		<result property="user_global_id" column="user_global_id"/>
		<result property="cre_time" column="cre_time"/>
		<result property="upd_time" column="upd_time"/>
		<result property="job_name" column="job_name"/>
		<result property="job_level" column="job_level"/>
		<collection property="roleList" ofType="com.quick.portal.userRole.UserRoleDO">
			<id property="role_id" column="role_id"/>
			<result property="role_name" column="role_name"/>
			<result property="role_type_id" column="role_type_id"/>
			<result property="role_state" column="role_state"/>
		</collection>
		<collection property="depList" ofType="com.quick.portal.userDepartment.UserDepartmentDO">
			<id property="dep_id" column="dep_id"/>
			<result property="dep_name" column="dep_name"/>
			<result property="super_dep_id" column="super_dep_id"/>
			<result property="dep_level" column="dep_level"/>
			<result property="dep_state" column="dep_state"/>
			<result property="dep_global_id" column="dep_global_id"/>
			<result property="sup_dep_global_id" column="sup_dep_global_id"/>
		</collection>
	</resultMap>

</mapper>