<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quick.portal.secMetricConfig.ISecMetricConfigDao">
	
    <!--查询条件-->
	<sql id="where">
		1=1
		<if test="start_time != null and start_time != '' and start_time != 'null'"><![CDATA[
	       and a.cre_time >= #{start_time}
	    ]]></if>
		<if test="end_time != null and end_time != '' and end_time != 'null'"><![CDATA[
	       and date(a.cre_time) <= #{end_time}
	    ]]></if>
		<if test="config_ver != null and config_ver != '' and config_ver != 'null'"><![CDATA[
	       and c.version_num !='' Or c.version_num!= null
	    ]]></if>
		<if test="user_id != null and user_id != '' and user_id != 'null'"><![CDATA[
	       and a.user_id = #{user_id}
	    ]]></if>

        <if test="_sql_where != null and _sql_where != ''"> <![CDATA[
            and ${_sql_where}
        ]]> </if>
	</sql>
	<!-- 删除 -->
	<delete id="delete" parameterType="String">
		delete from sec_metric_config where config_id = #{config_id}
	</delete>
	
	<!-- 删除 -->
	<delete id="deleteBySectionId" parameterType="String">
		delete from sec_metric_config where sec_metric_id = #{sec_metric_id}
	</delete>
    
    <!--查询-->

	<select id="select" parameterType="map" resultType="map">
		SELECT f.cre_time,f.details,f.version_num,f.is_active,k.app_id,j.page_name ,group_concat(distinct k.page_id)as page_id ,group_concat(distinct l.app_name) as app_name from (
		select
	  sec_metric_id,
     C.cre_time
    ,C.metric_names as details
,coalesce(V.version_num, '') as version_num
,coalesce(V.is_active, 0) as is_active
from
( -- 该用户所有指标配置历史
select c.sec_metric_id,cre_time, group_concat(distinct m.metric_name) as metric_names
from sec_metric_config c, section_metric r, metric m
where
(
c.user_id = #{user_id}
/*or c.user_id in
		(select u.user_id from sys_user u, user_role_rela re
			where u.user_id = re.user_id
			and re.role_id = 1
		)*/
)
and c.sec_metric_id = r.sec_metric_id
		<if test="start_time != null and start_time != '' and start_time != 'null'"><![CDATA[
	       and c.cre_time >= #{start_time}
	    ]]></if>
		<if test="end_time != null and end_time != '' and end_time != 'null'"><![CDATA[
	       and date(c.cre_time) <= #{end_time}
	    ]]></if>
        and r.metric_id = m.metric_id
        group by cre_time
) C
left outer join (
select cre_time, version_num, is_active -- 该用户设置过的版本号
from user_config_version e
where e.user_id = #{user_id}

and e.term_type_id = 0 -- PC
) V
on C.cre_time = V.cre_time
order by cre_time desc
		)f
		left join section_metric h on f.sec_metric_id=h.sec_metric_id
		left join page_section  i  on  h.section_id=i.section_id
		left join page j  on  i.page_id=j.page_id
		left join app_page k  on  i.page_id=k.page_id
		left join application l  on  k.app_id=l.app_id
		where 1=1
		<if test="config_ver != null and config_ver != '' and config_ver != 'null'"><![CDATA[
	      and f.version_num !=''
	    ]]></if>
		group by f.cre_time
		order by f.cre_time desc
	</select>
	<!-- 查询总记录数 -->
	<select id="count" parameterType="map" resultType="int">
		select count(*) from sec_metric_config a
		<where>
			<include refid="where" />
		</where>
	</select>
<!--查询用户激活配置表-->
	<select id="selectUAC" parameterType="map" resultType="int">
		select count(*) from user_config_version a
	    where a.user_id = #{user_id} and a.term_type_id=#{term_type_id} and a.cre_time=#{cre_time}
	</select>
	
	<!--查询用户当前版本时间-->
	<select id="selectTime" parameterType="int" resultType="map">
		select * from user_config_version 
	    where user_id = #{user_id} and is_active = 1
	</select>
	
	 <!-- 新增metric -->
	<insert id="insert" parameterType="com.quick.portal.sectionMetric.SectionMetricDO">
		insert into sec_metric_config (
    		  user_id,
    		  sec_metric_id,
    		  param_id,
    		  param_value,
    		  cre_time
		)values(
			 #{user_id},
			 #{sec_metric_id},
			 #{param_id},
			 #{param_value},
			 #{cre_time}
			)
	</insert>
	
	<!--新增用户激活配置表-->
	<insert id="insertUAC" parameterType="map" >
		insert into user_config_version (

		user_id,
		term_type_id,
		cre_time,
		version_num,
		is_active
		)values(

		#{user_id},
		#{term_type_id},
		#{cre_time},
		#{version_num},
        #{is_active}
		)
	</insert>
	<insert id="insertUAC_Version" parameterType="map" >
		insert into user_config_version (
		user_id,
		is_active,
		term_type_id,
		cre_time,
		version_num
		)values(
		#{user_id},
		#{is_active},
		#{term_type_id},
		#{cre_time},
		#{version_num}
		)
	</insert>
	<!--修改用户激活配置表-->
	<update id="updateUAC_Active" parameterType="map" >
        update user_config_version set is_active=0 where
		user_id = #{user_id} and term_type_id=#{term_type_id};
		update user_config_version
		set

	      is_active=#{is_active}

		/*0 未激活  1 激活*/
		where
		user_id = #{user_id} and term_type_id=#{term_type_id} and cre_time=#{cre_time}
	</update>
	
	<!--将用户当前版本关闭-->
	<update id="updateUserActive" parameterType="map" >
		update user_config_version
		set

	      is_active=0

		/*0 未激活  1 激活*/
		where
		is_active=1
		and user_id = #{user_id} and term_type_id=#{term_type_id}
	</update>
	<update id="updateUAC_Version" parameterType="map" >
		update user_config_version
		set
		version_num=#{version_num}
		where
		user_id = #{user_id} and term_type_id=#{term_type_id} and cre_time=#{cre_time}
	</update>
</mapper>
